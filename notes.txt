What is Git?
============
- Version Control System (VCS) for tracking changes in computer files
- Distributed version control
- Who made what changes and when
- Revert back at any time
- Local and remote repositories

* You have a repository on your local machine where you do your work, and then you push your changes to the remote repo. *

Concepts of Git
===============
- Keeps track of code history
- Take "snapshots" of your files
- You decide when to take a snapshot by making a "commit"
- You can visit any snapshot at any time
- You can stage files before committing

COMMANDS
========

Initialize Local Git Repository
===============================
$ git init

Add Files to Index
==================
$ git add [file]

Check Status of Working Tree
============================
$ git status

Commit Changes to Index
=======================
$ git commit

Push to Remote Repository
=========================
$ git push

Pull Latest Changes From Remote Repository
==========================================
$ git pull

Clone Repository Into Current Directory
=======================================
$ git clone

Install Git
===========
http://git-scm.com/download/win

* Git Bash > Command Line. *

Check Version
=============
git --version

Create File
===========
touch [filename]

* Create your file, write your code. Open Git Bash in the directory, then run "git init". *

Set Your Name and Email w/ Git
==============================
git config --global user.name 'Chris Wick'
git config --global user.email 'cwickwriting@gmail.com'

Add File to Git Repository
==========================
git add [filename]

Check File Status
=================
git status

Remove File From Repository
===========================
git rm --cached index.html

Add All Files w/ .html to Repository
===========================
git add *.html

Add All Files to Repository
===========================
git add .

* Add files to change with 'git add [filename]', then commit changes with 'git commit' and write a description for the changes made, then save and close editor window. *

* Alternatively, you can 'git add [filename]' and then 'git commit -m '[add change message here]'. *

* 'touch .gitignore *

* You simply just have to add the filename to the .gitignore file *

* You can also ignore directories by finding the file path... i.e. /dir2 *

* Or you can do *.text to ignore all text files. *

* You can create branches so you can make changes without changing the actual code until the code is completed. *
git branch [name] i.e. git branch login

Switch Branches
===============
git checkout [branchname]
i.e. get checkout login